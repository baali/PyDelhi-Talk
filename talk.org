#+SETUPFILE: s5.org
#+TITLE: Chat-With-Customer @@html:<br>@@ Use Case of Zulip
#+AUTHOR: Shantanu @@html:<br>@@ TaxSpanner.Com
#+EMAIL: baali@muse-amuse.in
#+COMPANY: TaxSpanner.com
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+OPTIONS: toc:1
#+OPTIONS: num:nil
* Whom is this talk for?
  #+BEGIN_QUOTE
  Do you have a web-application?
  #+END_QUOTE
  #+BEGIN_QUOTE
  Do you use your own/third party app for Assisting your customers
  over chat?
  #+END_QUOTE
** Introduction
   If answer to both previous questions is *YES* or you are considering
   to add such a feature. Then:
   + We will look at existing options and their limitations.
   + How we have used and extended zulip to offer a _better_ service.
** Options
   + [[https://www.tawk.to][tawk.to]]
   + [[https://www.livechatinc.com/livechat-resources/online-customer-service-best-practices/][LiveChat]]
   + [[https://www.olark.com/][Olark]]
   + And as we start digging more CRM tools starts showing up in results
** Opportunity Lost
   Phrases being used by these products:
   #+BEGIN_QUOTE
   It is super easy to get started - Tawk.to
   #+END_QUOTE
   #+BEGIN_QUOTE
   Chat in minutes. Copy. Paste. Chat. - Olark
   #+END_QUOTE
   They make it sound so easy and also something which a product
   should be _least bothered_ about.
** That is so _WRONG_
   #+BEGIN_QUOTE
   Keep your customers closer.
   #+END_QUOTE
   + Returning customers ends with random support staff having no clue
     about history of previous conversations.
   + We Miss out on all the chat-conversations.
     APIs/Logs are there, but...
   + don't be the one with leaky holes while everyone else is
     automating the heck out of everything.
* Introduction
  _Zulip_ : =Powerful open source group chat=
** Features
   + OpenSource
   + Django Stack
   + Threaded Conversations
   + Bots!
   + File Uploads
   #+BEGIN_QUOTE
   Slack + _More_
   #+END_QUOTE
* Demo
** How we did it?
   + We added one separate view for customers.
   + pruned home template.
   + Added one feature to upstream to handle streams in better way.
* Issues
  + Despite all the features available with zulip, dedicated solutions
    do have edgy features.
  + Server Requirements
    + Disabled some of services to keep memory footprint in check.
    + RabbitMQ, Tornado and more.
  + Keeping threads and frontend interface clean.
* Questions?
  GitHub Repo: https://github.com/baali/chat-with-us

  Slides: https://github.com/baali/PyDelhi-Talk
